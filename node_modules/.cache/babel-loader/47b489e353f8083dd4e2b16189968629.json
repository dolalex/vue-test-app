{"remainingRequest":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/babel-loader/lib/index.js!/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/src/store/modules/products.js","dependencies":[{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/src/store/modules/products.js","mtime":1556187134788},{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport _classCallCheck from \"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport * as fb from 'firebase';\n\nvar Product = function Product(title, vendor, color, material, price, description, ownerId) {\n  var imageSrc = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : '';\n  var promo = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n  var id = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : null;\n\n  _classCallCheck(this, Product);\n\n  this.title = title;\n  this.vendor = vendor;\n  this.color = color;\n  this.material = material;\n  this.price = price;\n  this.description = description;\n  this.ownerId = ownerId;\n  this.imageSrc = imageSrc;\n  this.promo = promo;\n  this.id = id;\n};\n\nexport default {\n  state: {\n    products: []\n  },\n  mutations: {\n    createProduct: function createProduct(state, payload) {\n      state.products.push(payload);\n    },\n    loadProducts: function loadProducts(state, payload) {\n      state.products = payload;\n    },\n    updateProduct: function updateProduct(state, _ref) {\n      var title = _ref.title,\n          description = _ref.description,\n          id = _ref.id;\n      var product = state.products.find(function (a) {\n        return a.id === id;\n      });\n      product.title = title;\n      product.description = description;\n    }\n  },\n  actions: {\n    createProduct: function () {\n      var _createProduct = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref2, payload) {\n        var commit, getters, image, newProduct, product, imageExt, fileData, imageSrc;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref2.commit, getters = _ref2.getters;\n                commit('clearError');\n                commit('setLoading', true);\n                image = payload.image;\n                _context.prev = 4;\n                newProduct = new Product(payload.title, payload.vendor, payload.color, payload.material, payload.price, payload.description, getters.user.id, '', payload.promo);\n                _context.next = 8;\n                return fb.database().ref('products').push(newProduct);\n\n              case 8:\n                product = _context.sent;\n                imageExt = image.name.slice(image.name.lastIndexOf('.'));\n                _context.next = 12;\n                return fb.storage().ref(\"products/\".concat(product.key, \".\").concat(imageExt)).put(image);\n\n              case 12:\n                fileData = _context.sent;\n                _context.next = 15;\n                return fb.storage().ref().child(fileData.ref.fullPath).getDownloadURL();\n\n              case 15:\n                imageSrc = _context.sent;\n                _context.next = 18;\n                return fb.database().ref('products').child(product.key).update({\n                  imageSrc: imageSrc\n                });\n\n              case 18:\n                commit('setLoading', false);\n                commit('createProduct', _objectSpread({}, newProduct, {\n                  id: product.key,\n                  imageSrc: imageSrc\n                }));\n                _context.next = 27;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](4);\n                commit('setError', _context.t0.message);\n                commit('setLoading', false);\n                throw _context.t0;\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 22]]);\n      }));\n\n      function createProduct(_x, _x2) {\n        return _createProduct.apply(this, arguments);\n      }\n\n      return createProduct;\n    }(),\n    fetchProducts: function () {\n      var _fetchProducts = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref3) {\n        var commit, resultProducts, productsVal, products;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref3.commit;\n                commit('clearError');\n                commit('setLoading', true);\n                resultProducts = [];\n                _context2.prev = 4;\n                _context2.next = 7;\n                return fb.database().ref('products').once('value');\n\n              case 7:\n                productsVal = _context2.sent;\n                products = productsVal.val();\n\n                _Object$keys(products).forEach(function (key) {\n                  var product = products[key];\n                  resultProducts.push(new Product(product.title, product.vendor, product.color, product.material, product.price, product.description, product.ownerId, product.imageSrc, product.promo, key));\n                  commit('loadProducts', resultProducts);\n                  commit('setLoading', false);\n                });\n\n                _context2.next = 17;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](4);\n                commit('setError', _context2.t0.message);\n                commit('setLoading', false);\n                throw _context2.t0;\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 12]]);\n      }));\n\n      function fetchProducts(_x3) {\n        return _fetchProducts.apply(this, arguments);\n      }\n\n      return fetchProducts;\n    }(),\n    updateProduct: function () {\n      var _updateProduct = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref4, _ref5) {\n        var commit, title, description, id;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref4.commit;\n                title = _ref5.title, description = _ref5.description, id = _ref5.id;\n                commit('clearError');\n                commit('setLoading', true);\n                _context3.prev = 4;\n                _context3.next = 7;\n                return fb.database().ref('products').child(id).update({\n                  title: title,\n                  description: description\n                });\n\n              case 7:\n                commit('updateProduct', {\n                  title: title,\n                  description: description,\n                  id: id\n                });\n                commit('setLoading', false);\n                _context3.next = 16;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](4);\n                commit('setError', _context3.t0.message);\n                commit('setLoading', false);\n                throw _context3.t0;\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[4, 11]]);\n      }));\n\n      function updateProduct(_x4, _x5) {\n        return _updateProduct.apply(this, arguments);\n      }\n\n      return updateProduct;\n    }()\n  },\n  getters: {\n    products: function products(state) {\n      return state.products;\n    },\n    promoProducts: function promoProducts(state) {\n      return state.products.filter(function (product) {\n        return product.promo;\n      });\n    },\n    myProducts: function myProducts(state, getters) {\n      return state.products.filter(function (product) {\n        return product.ownerId === getters.user.id;\n      });\n    },\n    productById: function productById(state) {\n      return function (productId) {\n        return state.products.find(function (product) {\n          return product.id === productId;\n        });\n      };\n    }\n  }\n};",{"version":3,"sources":["/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/src/store/modules/products.js"],"names":["fb","Product","title","vendor","color","material","price","description","ownerId","imageSrc","promo","id","state","products","mutations","createProduct","payload","push","loadProducts","updateProduct","product","find","a","actions","commit","getters","image","newProduct","user","database","ref","imageExt","name","slice","lastIndexOf","storage","key","put","fileData","child","fullPath","getDownloadURL","update","message","fetchProducts","resultProducts","once","productsVal","val","forEach","promoProducts","filter","myProducts","productById","productId"],"mappings":"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","sourcesContent":["import * as fb from 'firebase'\n\nclass Product {\n  constructor (title, vendor, color, material, price, description, ownerId, imageSrc = '', promo = false, id = null) {\n    this.title = title\n    this.vendor = vendor\n    this.color = color\n    this.material = material\n    this.price = price\n    this.description = description\n    this.ownerId = ownerId\n    this.imageSrc = imageSrc\n    this.promo = promo\n    this.id = id\n  }\n}\n\nexport default {\n  state: {\n    products: [\n\n    ]\n  },\n  mutations: {\n    createProduct(state, payload) {\n      state.products.push(payload)\n    },\n    loadProducts(state, payload) {\n      state.products = payload\n    },\n    updateProduct (state, {title, description, id}) {\n      const product = state.products.find(a => {\n        return a.id === id\n      })\n\n      product.title = title\n      product.description = description\n    }\n  },\n  actions: {\n    async createProduct({commit, getters}, payload) {\n      commit('clearError')\n      commit('setLoading', true)\n      const image = payload.image\n      try {\n        const newProduct = new Product (\n          payload.title,\n          payload.vendor,\n          payload.color,\n          payload.material,\n          payload.price,\n          payload.description,\n          getters.user.id,\n          '',\n          payload.promo\n        );\n\n        const product = await fb.database().ref('products').push(newProduct);\n        const imageExt = image.name.slice(image.name.lastIndexOf('.'))\n        const fileData = await fb.storage().ref(`products/${product.key}.${imageExt}`).put(image)\n        const imageSrc = await fb.storage().ref().child(fileData.ref.fullPath).getDownloadURL()\n\n        await fb.database().ref('products').child(product.key).update({imageSrc})\n        commit('setLoading', false)\n        commit('createProduct', {\n          ... newProduct,\n          id: product.key,\n          imageSrc\n        })\n      } catch (error) {\n        commit('setError', error.message);\n        commit('setLoading', false)\n        throw error\n      }\n    },\n    async fetchProducts ({commit}) {\n      commit('clearError')\n      commit('setLoading', true)\n      const resultProducts = []\n\n      try {\n        const productsVal = await fb.database().ref('products').once('value')\n        const products = productsVal.val()\n        Object.keys(products).forEach(key => {\n          const product = products[key]\n          resultProducts.push(\n            new Product(\n              product.title,\n              product.vendor,\n              product.color,\n              product.material,\n              product.price,\n              product.description,\n              product.ownerId,\n              product.imageSrc,\n              product.promo,\n              key\n            )\n          )\n          commit('loadProducts', resultProducts)\n          commit('setLoading', false)\n        })\n      }\n\n      catch (error) {\n        commit('setError', error.message);\n        commit('setLoading', false)\n        throw error\n      }\n    },\n    async updateProduct ({commit}, {title, description, id}) {\n      commit('clearError')\n      commit('setLoading', true)\n\n      try {\n        await fb.database().ref('products').child(id).update({\n          title,\n          description\n        })\n        commit('updateProduct', {\n          title,\n          description,\n          id\n        })\n        commit('setLoading', false)\n      }\n\n      catch (error) {\n        commit('setError', error.message);\n        commit('setLoading', false)\n        throw error\n      }\n    }\n  },\n  getters: {\n    products (state) {\n      return state.products\n    },\n    promoProducts  (state) {\n      return state.products.filter(product => {\n        return product.promo\n      })\n    },\n    myProducts (state, getters) {\n      return state.products.filter(product => {\n        return product.ownerId === getters.user.id\n      })\n    },\n\n    productById (state) {\n      return productId => {\n        return state.products.find(product => product.id === productId)\n\n      }\n    }\n    \n  }\n}"]}]}