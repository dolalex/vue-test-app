{"remainingRequest":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/babel-loader/lib/index.js!/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/src/store/modules/orders.js","dependencies":[{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/src/store/modules/orders.js","mtime":1556194767359},{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport * as fb from 'firebase';\n\nvar Order = function Order(name, phone, productId) {\n  var done = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var id = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n  _classCallCheck(this, Order);\n\n  this.name = name;\n  this.phone = phone;\n  this.productId = productId;\n  this.done = done;\n  this.id = id;\n};\n\nexport default {\n  state: {\n    orders: []\n  },\n  mutations: {\n    loadOrders: function loadOrders(state, payload) {\n      state.orders = payload;\n    }\n  },\n  actions: {\n    createOrder: function () {\n      var _createOrder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n        var commit, name, phone, productId, ownerId, order;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                name = _ref2.name, phone = _ref2.phone, productId = _ref2.productId, ownerId = _ref2.ownerId;\n                order = new Order(name, phone, productId);\n                commit('clearError');\n                _context.prev = 4;\n                _context.next = 7;\n                return fb.database().ref(\"/users/\".concat(ownerId, \"/orders\")).push(order);\n\n              case 7:\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](4);\n                commit('setError', _context.t0.message);\n                throw _context.t0;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 9]]);\n      }));\n\n      function createOrder(_x, _x2) {\n        return _createOrder.apply(this, arguments);\n      }\n\n      return createOrder;\n    }(),\n    fetchOrders: function () {\n      var _fetchOrders = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref3) {\n        var commit, getters, resultOrders, fbValue, orders;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref3.commit, getters = _ref3.getters;\n                commit('setLoading', true);\n                commit('clearError');\n                resultOrders = [];\n                _context2.prev = 4;\n                _context2.next = 7;\n                return fb.database().ref(\"/users/\".concat(getters.user.id, \"/orders\")).once(value);\n\n              case 7:\n                fbValue = _context2.sent;\n                orders = fbValue.val();\n\n                _Object$keys(orders).forEach(function (key) {\n                  var order = orders[key];\n                  resultOrders.push(new Order(order.name, order.phone, order.productId, order.done, key));\n                });\n\n                commit('loadOrders', resultOrders);\n                _context2.next = 18;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](4);\n                commit('setLoading', false);\n                commit('setError', _context2.t0.message);\n                throw _context2.t0;\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 13]]);\n      }));\n\n      function fetchOrders(_x3) {\n        return _fetchOrders.apply(this, arguments);\n      }\n\n      return fetchOrders;\n    }()\n  },\n  getters: {\n    doneOrders: function doneOrders(state) {\n      return state.orders.filter(function (order) {\n        return order.done;\n      });\n    },\n    unDoneOrders: function unDoneOrders(state) {\n      return state.orders.filter(function (order) {\n        return !order.done;\n      });\n    },\n    orders: function orders(state, getters) {\n      return getters.unDoneOrders.concat(getters.doneOrders);\n    }\n  }\n};",{"version":3,"sources":["/Users/iharveydent-mac/Work/Projects/Javascript Lessons/vue-lessons/appvue/src/store/modules/orders.js"],"names":["fb","Order","name","phone","productId","done","id","state","orders","mutations","loadOrders","payload","actions","createOrder","commit","ownerId","order","database","ref","push","message","fetchOrders","getters","resultOrders","user","once","value","fbValue","val","forEach","key","doneOrders","filter","unDoneOrders","concat"],"mappings":"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","sourcesContent":["import * as fb from 'firebase'\n\nclass Order {\n  constructor(name, phone, productId, done = false, id = null) {\n    this.name = name\n    this.phone = phone\n    this.productId = productId\n    this.done = done\n    this.id = id\n  }\n}\n\nexport default {\n  state: {\n    orders: [],\n  },\n  mutations: {\n    loadOrders (state, payload) {\n      state.orders = payload\n    }\n  },\n  actions: {\n    async createOrder({commit}, {name, phone, productId, ownerId}) {\n      const order = new Order (name, phone, productId)\n        commit('clearError')\n\n      try {\n        await fb.database().ref(`/users/${ownerId}/orders`).push(order)\n      }\n\n      catch(error) {\n        commit('setError', error.message);\n        throw error\n      }\n    },\n    async fetchOrders ({commit, getters}) {\n      commit('setLoading', true)\n      commit('clearError')\n\n      const resultOrders = []\n\n      try {\n        const fbValue = await fb.database().ref(`/users/${getters.user.id}/orders`).once(value)\n        const orders = fbValue.val()\n\n        Object.keys(orders).forEach(key => {\n          const order = orders[key]\n          resultOrders.push(new Order(order.name, order.phone, order.productId, order.done, key))\n        })\n\n        commit('loadOrders', resultOrders)\n      }\n\n      catch(error) {\n        commit('setLoading', false);\n        commit('setError', error.message);\n        throw error\n      }\n    }\n  },\n  getters: {\n    doneOrders(state) {\n      return state.orders.filter(order => order.done)\n    },\n    unDoneOrders (state) {\n      return state.orders.filter(order => !order.done)\n    },\n    orders (state, getters) {\n      return getters.unDoneOrders.concat(getters.doneOrders)\n    }\n  }\n}"]}]}